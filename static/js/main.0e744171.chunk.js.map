{"version":3,"sources":["components/Filter/Filter.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/Container/Container.jsx","redux/Phonebook/phone-actions.js","redux/Phonebook/phone-selector.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Modal/Modal.jsx","components/App/App.js","redux/Phonebook/phone-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","getContacts","state","contact","getFilter","filter","getFiltredContacts","contacts","normalizeFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","resetForm","form","onSubmit","preventDefault","some","element","alert","label","input","type","pattern","title","required","onChange","button","ContactList","list","map","item","info","onClick","Filter","section","text","Modal","toggleModal","useEffect","window","addEventListener","handleEscape","removeEventListener","handleClose","code","target","createPortal","backDrop","content","document","getElementById","App","showModal","setShowModal","contactList","createReducer","initialContacts","contactFilter","_","persistConfig","key","version","storage","blacklist","contactReducer","combineReducers","persistedProductReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0e744171.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Filter_section__n1Wum\",\"text\":\"Filter_text__2Hi4t\",\"input\":\"Filter_input__4GpWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backDrop\":\"Modal_backDrop__3SjAm\",\"content\":\"Modal_content__3pjgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__CvgCq\"};","import PropTypes from \"prop-types\";\nimport s from './Container.module.css';\n\nexport default function Container ({ children })  {\n  return (\n  <div className={s.container}>\n    {children}\n  </div>\n  )\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/Add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nexport const deleteContact = createAction('contacts/Delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","export const getContacts = state => state.contact;\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFiltredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/Phonebook/phone-actions';\nimport { getContacts } from '../../redux/Phonebook/phone-selector';\nimport s from './ContactForm.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      resetForm();\n      return alert(`${name} is already in the directory`);\n    }\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          <span className={s.name}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <label className={s.label}>\n          <span className={s.name}>Number</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/Phonebook/phone-actions';\nimport { getFiltredContacts } from '../../redux/Phonebook/phone-selector';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <div className={s.info}>\n            <p className={s.name}> {name}</p>\n            <p className={s.number}> {number}</p>\n          </div>\n\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/Phonebook/phone-selector';\nimport { changeFilter } from '../../redux/Phonebook/phone-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onchangeFilter = e => dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <div className={s.section}>\n      <span className={s.text}> Фильтр по имени</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={onchangeFilter}\n      ></input>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nexport default function Modal({ toggleModal,children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n    return window.removeEventListener('keydown', handleClose);\n  });\n  \n\n  const handleEscape = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  const handleClose = e => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.backDrop} onClick={handleClose}>\n      <div className={s.content}>{children}</div>\n    </div>,\n    document.getElementById('modalRoot'),\n  );\n}\n","import './App.css';\nimport { useState } from 'react';\nimport { RiContactsBook2Fill, RiContactsFill } from 'react-icons/ri';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport Modal from '../Modal/Modal';\n// import useLocalStorage from '../../hooks/useLocalStorage';\n\nexport default function App() {\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => setShowModal(!showModal);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1>\n          <RiContactsBook2Fill />\n          Phonebook\n        </h1>\n        <button className=\"center_button\" type=\"button\" onClick={toggleModal}>\n          Add contact\n        </button>\n        {showModal && (\n          <Modal toggleModal={toggleModal}>\n            <ContactForm />\n          </Modal>\n        )}\n\n        <h2>\n          <RiContactsFill />\n          Contacts\n        </h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContact, deleteContact, changeFilter } from './phone-actions';\r\nimport initialContacts from '../../data.json';\r\n\r\nexport const contactList = createReducer(initialContacts, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nexport const contactFilter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { contactList, contactFilter } from './Phonebook/phone-reducers';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist';\r\n  \r\n  import storage from 'redux-persist/lib/storage';\r\n  \r\n  const persistConfig = {\r\n    key: 'products',\r\n    version: 1,\r\n    storage,\r\n    blacklist: ['filter'],\r\n  };\r\n\r\nconst contactReducer = combineReducers({\r\n    contact: contactList,\r\n    filter: contactFilter,\r\n  }); \r\n\r\n  const persistedProductReducer = persistReducer(persistConfig, contactReducer);\r\n\r\n\r\n// export const store = configureStore({\r\n//   reducer: contactReducer,\r\n//   devTools: process.env.NODE_ENV !== 'production',\r\n// });\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedProductReducer,\r\n    middleware: getDefaultMiddleware =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }).concat(logger),\r\n  });\r\n  \r\n  export const persistor = persistStore(store);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { store,  persistor  } from '../src/redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2NK6i\",\"label\":\"ContactForm_label__1MlX2\",\"name\":\"ContactForm_name__3LJ3b\",\"input\":\"ContactForm_input__3N1U5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3SRH7\",\"item\":\"ContactList_item__3EfhY\",\"info\":\"ContactList_info__J4D3n\",\"name\":\"ContactList_name__1gl31\"};"],"sourceRoot":""}